/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import javax.swing.table.DefaultTableModel;
import Models.Lop;
import Models.SinhVien;

import Controller.TableTrangChu;
import Models.FileTXT.ReadWriteList;
import View.DangNhap;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.util.Date;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.io.FileInputStream;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JOptionPane;
import static org.apache.poi.ss.usermodel.CellType.BLANK;
import static org.apache.poi.ss.usermodel.CellType.BOOLEAN;
import static org.apache.poi.ss.usermodel.CellType.NUMERIC;
import static org.apache.poi.ss.usermodel.CellType.STRING;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.DecimalFormat;
import javax.swing.ImageIcon;

/**
 *
 * @author HP
 */
public class TrangChu extends javax.swing.JFrame {
 ArrayList<SinhVien> listTatCaSinhVien = new ArrayList<>();
    
 
    
    ArrayList<Lop> listLop=new ArrayList<>(); ;
    
    ReadWriteList fileListTatCaSv = new ReadWriteList();
    ReadWriteList fileListLop = new ReadWriteList();
    String data_listTatCaSinhVien =  "CSDL_txt\\data_listTatCaSinhVien.txt";
    String data_listLop =  "CSDL_txt\\data_listLop.txt";
    /**
     * Creates new form NewJFrameDAD
     */
    public TrangChu() {
        initComponents();
        
        readListTatCaSinhVien();
        readListLop();
        if (listLop.isEmpty() && listTatCaSinhVien.isEmpty()) {
                fakeData();  
        }
        loadTableTrangChu();
        myInit();
        clickdetail();
    }
    
   
    
    
    public void writeListTatCaSinhVien(){
        try {
            fileListTatCaSv.WriteObject(data_listTatCaSinhVien, listTatCaSinhVien);
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(TrangChu.this, "Lỗi ghi tất cả sinh viên!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }
    
     public void readListTatCaSinhVien(){
        try {
            this.listTatCaSinhVien = fileListTatCaSv.ReadObject(data_listTatCaSinhVien);
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(TrangChu.this, "Lỗi đọc listTatCaSinhVien!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }
     
     public void writeListLop(){
        try {
            fileListLop.WriteObject(data_listLop, listLop);
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(TrangChu.this, "Lỗi ghi listLop!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }
    
     public void readListLop(){
        try {
            this.listLop = fileListLop.ReadObject(data_listLop);
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(TrangChu.this, "Lỗi đọc listLop!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        btnTrangChu = new javax.swing.JButton();
        LaBel_QLTN = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMaLop = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTenLop = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNgayBatDau = new javax.swing.JTextField();
        txtNgayKetThuc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSoBuoiHoc = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtChonFile = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSapXep = new javax.swing.JButton();
        cbLoaiSapXep = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLopTrucNhat = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        Reload = new javax.swing.JButton();
        btnDangXuat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Trang Chủ");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel3.setBackground(new java.awt.Color(0, 102, 51));

        btnTrangChu.setBackground(new java.awt.Color(0, 102, 51));
        javax.swing.ImageIcon originalIcon  = new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/logo-haui.png"));
        Image originalImage = originalIcon.getImage();
        Image resizedImage = originalImage.getScaledInstance(90, 90, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon = new ImageIcon(resizedImage);
        btnTrangChu.setIcon(resizedIcon);
        btnTrangChu.setBorder(null);
        btnTrangChu.setFocusable(false);
        btnTrangChu.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnTrangChu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTrangChu.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnTrangChu.setMaximumSize(new java.awt.Dimension(40, 40));
        btnTrangChu.setMinimumSize(new java.awt.Dimension(40, 40));
        btnTrangChu.setRolloverEnabled(false);
        btnTrangChu.setVerifyInputWhenFocusTarget(false);
        btnTrangChu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrangChuActionPerformed(evt);
            }
        });

        LaBel_QLTN.setBackground(new java.awt.Color(0, 135, 102));
        LaBel_QLTN.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        LaBel_QLTN.setForeground(new java.awt.Color(255, 255, 255));
        LaBel_QLTN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LaBel_QLTN.setText("Quản lý trực nhật sinh viên HAUI");
        LaBel_QLTN.setToolTipText("");
        LaBel_QLTN.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTrangChu, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LaBel_QLTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTrangChu, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                    .addComponent(LaBel_QLTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("DANH SÁCH LỚP HỌC");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Mã lớp:");

        jLabel2.setText("Tên lớp");

        jLabel4.setText("Ngày bắt đầu: ");

        jLabel5.setText("Ngày kết thúc: ");

        jLabel6.setText("Số buổi học:");

        jLabel8.setText("Danh sách lớp:");

        txtChonFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChonFileActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 204));
        jButton1.setText("Chọn file");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMaLop, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTenLop)
                    .addComponent(txtNgayKetThuc, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSoBuoiHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txtChonFile, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtChonFile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaLop, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenLop, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSoBuoiHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnThem.setBackground(new java.awt.Color(0, 153, 51));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(0, 153, 51));
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(204, 51, 0));
        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSapXep.setBackground(new java.awt.Color(0, 153, 51));
        btnSapXep.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSapXep.setForeground(new java.awt.Color(255, 255, 255));
        btnSapXep.setText("Sắp xếp");
        btnSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapXepActionPerformed(evt);
            }
        });

        cbLoaiSapXep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã lớp", "Tên Lớp", "Ngày bắt đầu", "Ngày kết thúc", "Số buổi học", "Số lượng sinh viên" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbLoaiSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSapXep, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(cbLoaiSapXep))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnSua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tblLopTrucNhat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblLopTrucNhat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblLopTrucNhat);

        btnTimKiem.setBackground(new java.awt.Color(255, 204, 0));
        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("THÔNG TIN LỚP HỌC");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
        );

        Reload.setBackground(new java.awt.Color(255, 255, 204));
        Reload.setText("Reload");
        Reload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReloadActionPerformed(evt);
            }
        });

        btnDangXuat.setBackground(new java.awt.Color(0, 153, 255));
        btnDangXuat.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDangXuat.setForeground(new java.awt.Color(255, 255, 255));
        btnDangXuat.setText("Đăng xuất");
        btnDangXuat.setToolTipText("");
        btnDangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangXuatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDangXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Reload)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDangXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Reload, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loadTableTrangChu() {
        tblLopTrucNhat.setModel(new TableTrangChu(listLop));
    }
    
    private void openFileChooser() {
        
         JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files (*.xlsx)", "xlsx");
        fileChooser.setFileFilter(filter);
        int result =fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
        // Lấy đường dẫn của tệp đã chọn
        String selectedFilePath = fileChooser.getSelectedFile().getAbsolutePath();
        txtChonFile.setText(selectedFilePath);
        } 
       
        
    }

    private void themSinhVienVaoLop(Lop lop) {
        for (SinhVien sv : listTatCaSinhVien) {
            if (sv.getListMaLop().contains(lop.getMaLop())) {
                lop.getListSV().add(sv);
            }
        }
    }

    private static String getCellValueAsString(Cell cell) {
        if (cell == null) {
            return null;
        }
        
        switch (cell.getCellType()) {
            case STRING:
                return cell.getStringCellValue();
            case NUMERIC:
                // Convert giá trị số sang chuỗi
                return String.valueOf(cell.getNumericCellValue());
            case BOOLEAN:
                return String.valueOf(cell.getBooleanCellValue());
            case BLANK:
                return "";
            default:
                return null;
        }
    }
    
    private String ThongBao() {
        String maLop = txtMaLop.getText();
        String tenLop = txtTenLop.getText();
        String ngayBD = txtNgayBatDau.getText();
        String ngayKT = txtNgayKetThuc.getText();
        String soBuoiHoc = txtSoBuoiHoc.getText();
        
        String thongBao = "";
        
        if (maLop.equals("")) {
            thongBao += "Chưa điền mã lớp!\n";
        }
        
        if (tenLop.equals("")) {
            thongBao += "Chưa điền tên lớp!\n";
        }
        if (soBuoiHoc.equals("")) {
            thongBao += "Chưa điền Số buổi học!\n";
        }
        if (ngayBD.equals("") || ngayKT.equals("")) {
            if (ngayBD.equals("")) {
                thongBao += "Chưa nhập ngày bắt đầu!\n";
            }
            if (ngayKT.equals("")) {
                thongBao += "Chưa nhập ngày bắt đầu!\n";
            }
        } else {
            try {
                // Tạo đối tượng SimpleDateFormat với định dạng ngày tháng mong muốn
                SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");

                // Chuyển đổi chuỗi thành đối tượng Date
                Date ngayBatDau = sdf.parse(ngayBD);
                Date ngayKetThuc = sdf.parse(ngayKT);
                // In đối tượng Date
            } catch (ParseException e) {
                thongBao += "Nhập sai định dạng ngày-tháng-năm (dd-MM-yyy)!\n";
            }
        }
        
        if (soBuoiHoc.equals("")) {
            thongBao += "Chưa điền số buổi học!\n";
        } else {
            try {
                int sobuoihoc = Integer.parseInt(soBuoiHoc);
                if (sobuoihoc <= 0) {
                    thongBao += "Số buổi học phải lớn hơn 0!\n";
                }
                
            } catch (NumberFormatException e) {
                thongBao += "Số buổi học phải là số nguyên!\n";
            }
        }
        return thongBao;
    }
    
    boolean checkSua() throws Exception {
        String thongBao = ThongBao();
        if (thongBao.equals("") == false) {
            throw new Exception(thongBao);
        }
        return true;
    }
    
    boolean checkThem() throws Exception {
        String thongBao = ThongBao();
        String maLop = txtMaLop.getText();
        if (listLop.contains(new Lop(maLop))) {
            thongBao += "Mã lớp đã tồn tại!\n";
        }
        String filePath = txtChonFile.getText();
        if (filePath.equals("")) {
            thongBao += "Chưa chọn file danh sách lớp!\n";
        }
        if (thongBao.equals("") == false) {
            throw new Exception(thongBao);
        }
        return true;
    }
    
    boolean checkDong() throws Exception {
        if (tblLopTrucNhat.getSelectedRow() == -1) {
            throw new Exception("Chưa chọn dòng!");
        }
        return true;
    }
//đọc file excel của 1 lớp và gán mã lớp cho sinh viên sau đó them sinh viên vào listTatCaSinhVien

    private boolean readExcelFile(String filePath, int numSheet, String maLop) {
        try (FileInputStream fileInputStream = new FileInputStream(filePath); Workbook workbook = new XSSFWorkbook(fileInputStream)) {
            // Lấy sheet đầu tiên từ workbook
            Sheet sheet = workbook.getSheetAt(numSheet);
            // Bỏ qua dòng tiêu đề
            int startRow = sheet.getFirstRowNum() + 1;
            // Lặp qua từng hàng và thêm thông tin vào danh sách
            for (int rowIndex = startRow; rowIndex <= sheet.getLastRowNum(); rowIndex++) {
                Row row = sheet.getRow(rowIndex);
                if (row != null) {
                    // Đọc thông tin từ cột 0 và cột 1
                    Cell cellMaSV = row.getCell(0);
                    Cell cellHoTen = row.getCell(1);
                    String maSV;
                    //dinh dạng lại mã sinh viên do quá lớn 
                    DecimalFormat decimalFormat = new DecimalFormat("#");
                    maSV = decimalFormat.format(cellMaSV.getNumericCellValue());
                    // System.out.println(maSV);
                    String hoTen = getCellValueAsString(cellHoTen);
                    // System.out.println(hoTen);
                    // Kiểm tra giá trị trước khi thêm vào danh sách
                    if (maSV != null && hoTen != null) {
                        SinhVien newSV = new SinhVien(maSV, hoTen, new ArrayList<>());
                        //Nếu sinh viên đã tồn tại trong listTatCaSinhVien thì thêm mã lớp mới vào listMaLop của sinh viên
                        
                        if (listTatCaSinhVien.contains(newSV)) { // equal theo mã
                            int index = listTatCaSinhVien.indexOf(newSV);
                            listTatCaSinhVien.get(index).addMaLop(maLop);
                            
                        } else {
                            newSV.getListMaLop().add(maLop);
                            listTatCaSinhVien.add(newSV);
                        }
                        
                    } else {
                        
                    }
                }
            }
            System.out.println("Tổng sinh viên: " + listTatCaSinhVien.size());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(TrangChu.this, "Kiểm tra lại đường dẫn file!",
                    "Thông báo", JOptionPane.ERROR_MESSAGE);
            return false;
        }catch(NullPointerException e2){
             JOptionPane.showMessageDialog(TrangChu.this, "Kiểm tra lại dữ liệu trong file!",
                    "Thông báo", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    private void fakeData() {
        
        readExcelFile("data_test\\fake_dslop.xlsx", 0, "IT001");
        readExcelFile("data_test\\fake_dslop.xlsx", 1, "IT002");
        readExcelFile("data_test\\fake_dslop.xlsx", 0, "IT003");
        readExcelFile("data_test\\fake_dslop.xlsx", 2, "IT004");
        readExcelFile("data_test\\fake_dslop.xlsx", 3, "IT005");
        Date ngayBatDau1 = convertStringToDate("1-1-2021");
        Date ngayKetThuc1 = convertStringToDate("1-4-2021");
        Date ngayBatDau2 = convertStringToDate("1-5-2021");
        Date ngayKetThuc2 = convertStringToDate("1-7-2021");
        Date ngayBatDau3 = convertStringToDate("1-8-2021");
        Date ngayKetThuc3 = convertStringToDate("1-10-2021");
        Date ngayBatDau4 = convertStringToDate("10-8-2021");
        Date ngayKetThuc4 = convertStringToDate("10-10-2021");
        Date ngayBatDau5 = convertStringToDate("20-9-2021");
        Date ngayKetThuc5 = convertStringToDate("20-11-2021");
        
        Lop newLop = new Lop("IT001", "Lập Trình Java", ngayBatDau1, ngayKetThuc1, 10, new ArrayList<>());
        themSinhVienVaoLop(newLop);
        Lop newLop2 = new Lop("IT002", "Lập Trình .Net", ngayBatDau2, ngayKetThuc2, 9, new ArrayList<>());
        themSinhVienVaoLop(newLop2);
        Lop newLop3 = new Lop("IT003", "Đồ họa máy tính", ngayBatDau3, ngayKetThuc3, 12, new ArrayList<>());
        themSinhVienVaoLop(newLop3);
        Lop newLop4 = new Lop("IT004", "Cơ sở dữ liệu", ngayBatDau4, ngayKetThuc4, 11, new ArrayList<>());
        themSinhVienVaoLop(newLop4);
        Lop newLop5 = new Lop("IT005", "Kiến trúc máy tính", ngayBatDau5, ngayKetThuc5, 15, new ArrayList<>());
        themSinhVienVaoLop(newLop5);
        listLop.add(newLop);
        listLop.add(newLop2);
        listLop.add(newLop3);
        listLop.add(newLop4);
        listLop.add(newLop5);
        writeListLop();
        writeListTatCaSinhVien();
        
    }
    
    private void capNhatTextField(int selectedRow) {
        txtMaLop.setText(tblLopTrucNhat.getValueAt(selectedRow, 0).toString());
        txtTenLop.setText(tblLopTrucNhat.getValueAt(selectedRow, 1).toString());
        Date ngayBD = (Date) tblLopTrucNhat.getValueAt(selectedRow, 2);
        Date ngayKT = (Date) tblLopTrucNhat.getValueAt(selectedRow, 3);
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        txtNgayBatDau.setText(dateFormat.format(ngayBD));
        txtNgayKetThuc.setText(dateFormat.format(ngayKT));
        txtSoBuoiHoc.setText(tblLopTrucNhat.getValueAt(selectedRow, 4).toString());
    }

    private void btnTrangChuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrangChuActionPerformed
        // TODO add your handling code here:
        System.out.println("dfdsf");
    }//GEN-LAST:event_btnTrangChuActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        try {
            if (checkThem()) {
                String maLop = txtMaLop.getText();
                String tenLop = txtTenLop.getText();
                String ngayBD = txtNgayBatDau.getText();
                int soBuoiHoc = Integer.parseInt(txtSoBuoiHoc.getText());
                String ngayKT = txtNgayKetThuc.getText();
                if (readExcelFile(txtChonFile.getText(), 0, maLop) == false) {
                    return;
                }
                
                Date ngayBatDau = convertStringToDate(ngayBD);
                Date ngayKetThuc = convertStringToDate(ngayKT);
                Lop newLop = new Lop(maLop, tenLop, ngayBatDau, ngayKetThuc, soBuoiHoc, new ArrayList<>());
                System.out.println("Thêm thành công!");
                themSinhVienVaoLop(newLop);
                listLop.add(newLop);
                
                loadTableTrangChu();
                
                writeListTatCaSinhVien();
                writeListLop();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(TrangChu.this, e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnThemActionPerformed
    Date convertStringToDate(String input) {
        Date output = null;
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            
            output = sdf.parse(input);
            
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(TrangChu.this, "Thông tin Ngày-Tháng-Nam không đúng định dạng (dd-MM-yyy)!", "Thông báo", JOptionPane.OK_CANCEL_OPTION);
        }
        return output;
    }

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:

        try {
            if (checkDong() && checkSua()) {
                String seletecdMaLop = tblLopTrucNhat.getValueAt(tblLopTrucNhat.getSelectedRow(), 0).toString();
                int indexOfSeletecdMaLop = listLop.indexOf(new Lop(seletecdMaLop));
                Lop suaLop = listLop.get(indexOfSeletecdMaLop);
                
                String newMaLop = txtMaLop.getText();
                Lop check = new Lop(newMaLop);
                
                
                 // nếu text chứa link file excel ko null, xóa sinh viên trong listTatCaLop có mã của mã lớp mới bị xóa, nếu sinh viên đấy chỉ học 1 lớp bị sửa
                //                          nếu sinh viên học 2 lớp trở lên thì xóa mã lớp của lớp bị sửa trong listMaLop của sinh viên đó
                if (txtChonFile.getText().isEmpty() == false) {
                    try {
                        FileInputStream fileInputStream = new FileInputStream(txtChonFile.getText());
                        Workbook workbook = new XSSFWorkbook(fileInputStream);
                        workbook.close();
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(TrangChu.this, "Xem lại đường dẫn file!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    
                    xoaSVTheoMaLop(seletecdMaLop);
                    //
                    System.out.println("Sửa thành công!");
                    readExcelFile(txtChonFile.getText(), 0, newMaLop);
                   // System.out.println(newMaLop);
                    suaLop.getListSV().clear();
                    
                    themSinhVienVaoLop(suaLop);
                    
                }
                if (listLop.contains(check) && newMaLop.equals(seletecdMaLop) == false) {
                    JOptionPane.showMessageDialog(TrangChu.this, "Mã lớp đã tồn tại!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                suaLop.setMaLop(newMaLop);
                suaLop.setTenLop(txtTenLop.getText());
                
                suaLop.setNgayBD(convertStringToDate(txtNgayBatDau.getText()));
                suaLop.setNgayKT(convertStringToDate(txtNgayKetThuc.getText()));
                suaLop.setSoBuoiHoc(Integer.parseInt(txtSoBuoiHoc.getText()));
                //System.out.println(listTatCaSinhVien.size());
                // sửa lại mã lớp của tất cả sinh viên trong lớp đó
                if (newMaLop.equals(seletecdMaLop) == false) {
                    for (SinhVien sv : suaLop.getListSV()) {
                        sv.getListMaLop().set(sv.getListMaLop().indexOf(seletecdMaLop), newMaLop);
                    }
                }
               
               writeListTatCaSinhVien();
                writeListLop();
                JOptionPane.showMessageDialog(
                        TrangChu.this, "Sửa thành công!", "Thông báo", JOptionPane.PLAIN_MESSAGE);
                loadTableTrangChu();
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(TrangChu.this, e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
            
        }

    }//GEN-LAST:event_btnSuaActionPerformed
    void xoaSVTheoMaLop(String maLop) {
        Iterator<SinhVien> iterator = listTatCaSinhVien.iterator();
        while (iterator.hasNext()) {
            SinhVien sv = iterator.next();
            List<String> listMaLopSV = sv.getListMaLop();
            
            if (listMaLopSV != null && listMaLopSV.contains(maLop)) {
                //nếu sinh viên chỉ học 1 lớp thì khi lớp bị xóa, sinh viên cũng bị xóa khỏi hệ thống
                if (listMaLopSV.size() == 1) {
                    iterator.remove();
                    // nếu sinh viên học 2 lớp trở lên thì mã lớp đó sẽ bị xóa
                } else {
                    listMaLopSV.remove(maLop);
                }
            }
        }
    }
    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        
        if (tblLopTrucNhat.getSelectedRow() != -1) {
            int check = JOptionPane.showConfirmDialog(TrangChu.this, "Bạn có chắc muốn xóa", "Thông báo", JOptionPane.OK_CANCEL_OPTION);
            if (check == JOptionPane.YES_OPTION) {
                String selectedMaLop = tblLopTrucNhat.getValueAt(tblLopTrucNhat.getSelectedRow(), 0).toString();
                listLop.removeIf(lop -> lop.getMaLop().equals(selectedMaLop));
                xoaSVTheoMaLop(selectedMaLop);
                writeListTatCaSinhVien();
                writeListLop();
                JOptionPane.showMessageDialog(TrangChu.this, "Xóa thành công!", "Thông báo", JOptionPane.PLAIN_MESSAGE);
                loadTableTrangChu();
            }
             System.out.println("Xóa thành công");
            System.out.println("Tổng sinh viên: " + listTatCaSinhVien.size());
        } else
            JOptionPane.showMessageDialog(TrangChu.this, "Vui lòng chọn hàng muốn xóa!", "Thông báo", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapXepActionPerformed
        // TODO add your handling code here:
        int selected = cbLoaiSapXep.getSelectedIndex();
        switch (selected) {
            case 0:
                Comparator<Lop> c0 = new Comparator<Lop>() {
                    @Override
                    public int compare(Lop t, Lop t1) {
                        return t.getMaLop().compareToIgnoreCase(t1.getMaLop());
                    }
                };
                Collections.sort(listLop, c0);
                loadTableTrangChu();
                
                break;
            case 1:
                Comparator<Lop> c1 = new Comparator<Lop>() {
                    @Override
                    public int compare(Lop t, Lop t1) {
                        return t.getTenLop().compareToIgnoreCase(t1.getTenLop());
                    }
                };
                Collections.sort(listLop, c1);
                loadTableTrangChu();
                
                break;
            case 2:
                Comparator<Lop> c2 = new Comparator<Lop>() {
                    @Override
                    public int compare(Lop t, Lop t1) {
                        return t.getNgayBD().toString().compareToIgnoreCase(t1.getNgayBD().toString());
                    }
                };
                Collections.sort(listLop, c2);
                loadTableTrangChu();
            case 3:
                Comparator<Lop> c3 = new Comparator<Lop>() {
                    @Override
                    public int compare(Lop t, Lop t1) {
                        return t.getNgayKT().compareTo(t1.getNgayKT());
                    }
                };
                Collections.sort(listLop, c3);
                loadTableTrangChu();
                
                break;
            
            case 4:
                Comparator<Lop> c5 = new Comparator<Lop>() {
                    @Override
                    public int compare(Lop t, Lop t1) {
                        return Integer.compare(t.getSoBuoiHoc(), t1.getSoBuoiHoc());
                    }
                };
                Collections.sort(listLop, c5);
                loadTableTrangChu();
                break;
            case 5:
                Comparator<Lop> c4 = new Comparator<Lop>() {
                    @Override
                    public int compare(Lop t, Lop t1) {
                        return Integer.compare(t.getListSV().size(), t1.getListSV().size());
                    }
                };
                Collections.sort(listLop, c4);
                loadTableTrangChu();
                break;
            default:
                throw new AssertionError();
        }
    }//GEN-LAST:event_btnSapXepActionPerformed

    private void btnDangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangXuatActionPerformed
        DangNhap a = new DangNhap();
        a.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnDangXuatActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        openFileChooser();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        String TimKiem = txtTimKiem.getText().toLowerCase();
        if (TimKiem.isEmpty() == false) {
            String regex = ".*" + Pattern.quote(TimKiem) + ".*";
            ArrayList<Lop> searchedLop = new ArrayList<>();
            
            for (Lop lop : listLop) {
                if (lop.getMaLop().toLowerCase().contains(TimKiem)) {
                    searchedLop.add(lop);
                }
            }
            //nếu tìm theo mã lớp trống thì sẽ tìm theo tên lớp
            if (searchedLop.size() == 0) {
                for (Lop lop : listLop) {
                    if (lop.getTenLop().toLowerCase().contains(TimKiem)) {
                        searchedLop.add(lop);
                    }
                }
            }
            DefaultTableModel newModel = new DefaultTableModel();
            tblLopTrucNhat.setModel(newModel);
            tblLopTrucNhat.setModel(new TableTrangChu(searchedLop));
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void ReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReloadActionPerformed
        // TODO add your handling code here:
        DefaultTableModel newModel = new DefaultTableModel();
        tblLopTrucNhat.setModel(newModel);
        loadTableTrangChu();
    }//GEN-LAST:event_ReloadActionPerformed

    private void txtChonFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChonFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChonFileActionPerformed
    void myInit() {
        tblLopTrucNhat.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting() && tblLopTrucNhat.getSelectedRow() != -1) {
                    int selectedRow = tblLopTrucNhat.getSelectedRow();
                    capNhatTextField(selectedRow);
                }
            }
        });
    }
    
    public void clickdetail() {
        tblLopTrucNhat.addMouseListener(new MouseAdapter() {
            
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    int selectedRow = tblLopTrucNhat.getSelectedRow();
                    String classID = (String) tblLopTrucNhat.getValueAt(selectedRow, 0);
                    
                    showClassDetail(classID, selectedRow); // mở trang detail
                    dispose();//dong trang cũ
                }
            }
        });
    }
    
    public void showClassDetail(String classID, int selectedRow) {
        // Gọi lại interface để chuyển sang JFrame chi tiết
        ChiTietQLTN detailFrame = new ChiTietQLTN(classID, selectedRow, this);
        detailFrame.setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrangChu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrangChu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrangChu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrangChu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame trangChu = new TrangChu();
                
                trangChu.setVisible(true);
                trangChu.getContentPane().setBackground(Color.white);
                trangChu.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LaBel_QLTN;
    private javax.swing.JButton Reload;
    private javax.swing.JButton btnDangXuat;
    private javax.swing.JButton btnSapXep;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnTrangChu;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbLoaiSapXep;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLopTrucNhat;
    private javax.swing.JTextField txtChonFile;
    private javax.swing.JTextField txtMaLop;
    private javax.swing.JTextField txtNgayBatDau;
    private javax.swing.JTextField txtNgayKetThuc;
    private javax.swing.JTextField txtSoBuoiHoc;
    private javax.swing.JTextField txtTenLop;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

}
